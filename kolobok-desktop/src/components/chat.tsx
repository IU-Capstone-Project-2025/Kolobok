import React, { useState } from "react";
import "@fontsource/roboto-condensed";
import "../styles/kolochat.css";
import Logo from "../static/KOLOBOK.svg";
import { useNavigate } from "react-router-dom";

// –¢–∏–ø –¥–ª—è —Å–æ–æ–±—â–µ–Ω–∏—è, –∫–æ—Ç–æ—Ä–æ–µ –º–æ–∂–µ—Ç –±—ã—Ç—å –ª–∏–±–æ —Ç–µ–∫—Å—Ç–æ–º, –ª–∏–±–æ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ–º
interface Message {
  text: string; 
  sender: "user" | "bot"; 
  image?: string; // –ï—Å–ª–∏ —Å–æ–æ–±—â–µ–Ω–∏–µ —Å–æ–¥–µ—Ä–∂–∏—Ç –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ, –æ–Ω–æ –±—É–¥–µ—Ç —Ö—Ä–∞–Ω–∏—Ç—å—Å—è –≤ —ç—Ç–æ–º –ø–æ–ª–µ
}

export default function KolobokChat() {
  const [messages, setMessages] = useState<Message[]>([
    { text: "–ü—Ä–∏–≤–µ—Ç, —á–µ–º –º–æ–≥—É –ø–æ–º–æ—á—å?", sender: "bot" }
  ]);
  const [inputValue, setInputValue] = useState(""); // –î–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è –∑–Ω–∞—á–µ–Ω–∏—è –∏–Ω–ø—É—Ç–∞
  const [imageFile, setImageFile] = useState<File | null>(null); // –•—Ä–∞–Ω–µ–Ω–∏–µ —Å–∞–º–æ–≥–æ —Ñ–∞–π–ª–∞ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è
  const navigate = useNavigate();

  const handleGoToMain = () => {
    navigate("/");
  };

  const handleSendMessage = () => {
    if (inputValue.trim() === "") return; // –ù–µ –æ—Ç–ø—Ä–∞–≤–ª—è—Ç—å –ø—É—Å—Ç–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ

    // –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –Ω–æ–≤–æ–≥–æ —Ç–µ–∫—Å—Ç–æ–≤–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è –≤ —á–∞—Ç
    setMessages((prevMessages) => [
      ...prevMessages,
      { text: inputValue, sender: "user" },
      { text: "–û–±—Ä–∞–±–∞—Ç—ã–≤–∞—é...", sender: "bot" }, // –î–ª—è –∏–º–∏—Ç–∞—Ü–∏–∏ –æ—Ç–≤–µ—Ç–∞ –±–æ—Ç–∞
    ]);

    setInputValue(""); // –û—á–∏—Å—Ç–∏—Ç—å –∏–Ω–ø—É—Ç –ø–æ—Å–ª–µ –æ—Ç–ø—Ä–∞–≤–∫–∏
  };

  // –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –Ω–∞–∂–∞—Ç–∏—è –∫–ª–∞–≤–∏—à–∏
  const handleKeyPress = (e: React.KeyboardEvent<HTMLInputElement>) => {
    if (e.key === "Enter") {
      handleSendMessage(); // –û—Ç–ø—Ä–∞–≤–∏—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ –ø–æ –Ω–∞–∂–∞—Ç–∏—é Enter
    }
  };

  // –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è –∑–∞–≥—Ä—É–∑–∫–∏ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è
  const handleImageUpload = (e: React.ChangeEvent<HTMLInputElement>) => {
    const file = e.target.files?.[0];

    if (file) {
      // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ä–∞–∑–º–µ—Ä —Ñ–∞–π–ª–∞ (–æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏–µ –Ω–∞ —Ä–∞–∑–º–µ—Ä 5 –ú–±)
      if (file.size > 5 * 1024 * 1024) {
        alert("–†–∞–∑–º–µ—Ä –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è —Å–ª–∏—à–∫–æ–º –±–æ–ª—å—à–æ–π. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤—ã–±–µ—Ä–∏—Ç–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –º–µ–Ω—å—à–µ–≥–æ —Ä–∞–∑–º–µ—Ä–∞.");
        return;
      }

      // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ä–∞—Å—à–∏—Ä–µ–Ω–∏–µ —Ñ–∞–π–ª–∞ (jpg, jpeg, png)
      if (file.type === "image/jpeg" || file.type === "image/png") {
        const reader = new FileReader();
        reader.onloadend = () => {
          // –î–æ–±–∞–≤–ª—è–µ–º –Ω–æ–≤–æ–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –≤ —Å–ø–∏—Å–æ–∫ —Å–æ–æ–±—â–µ–Ω–∏–π –∫–∞–∫ —Å–∞–º–æ—Å—Ç–æ—è—Ç–µ–ª—å–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
          setMessages((prevMessages) => [
            ...prevMessages,
            {
              text: reader.result as string,
              sender: "user",
              image: reader.result as string, // –°–æ—Ö—Ä–∞–Ω—è–µ–º Data URL –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è
            },
          ]);
          setImageFile(file); // –°–æ—Ö—Ä–∞–Ω—è–µ–º —Å–∞–º —Ñ–∞–π–ª –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è
        };

        reader.onerror = (error) => {
          console.error("–û—à–∏–±–∫–∞ –ø—Ä–∏ —á—Ç–µ–Ω–∏–∏ —Ñ–∞–π–ª–∞:", error);
        };

        reader.readAsDataURL(file); // –ß–∏—Ç–∞–µ–º —Ñ–∞–π–ª –∫–∞–∫ Data URL
      } else {
        alert("–ó–∞–≥—Ä—É–∑–∏—Ç–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ —Ñ–æ—Ä–º–∞—Ç–∞ JPG, JPEG –∏–ª–∏ PNG.");
      }
    } else {
      console.log("–§–∞–π–ª –Ω–µ –≤—ã–±—Ä–∞–Ω.");
    }
  };

  return (
    <div className="kolobok-container">
      {/* Header */}
      <div className="kolobok-header">
        <div className="kolobok-logo" onClick={handleGoToMain}>
          <img src={Logo} alt="Kolobok Logo" />
        </div>
        <button className="kolobok-telegram">Telegram-bot</button>
      </div>

      {/* Chat Section */}
      <div className="chat-window">
        {messages.map((message, index) => (
          <div
            key={index}
            className={`chat-message ${message.sender}`}
          >
            {/* –û—Ç–æ–±—Ä–∞–∂–∞–µ–º —Ç–µ–∫—Å—Ç–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ */}
            {message.text && !message.image && <p>{message.text}</p>}

            {/* –û—Ç–æ–±—Ä–∞–∂–∞–µ–º –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –∫–∞–∫ —Å–∞–º–æ—Å—Ç–æ—è—Ç–µ–ª—å–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ */}
            {message.image && (
              <div className="chat-image">
                <img
                  src={message.image}
                  alt="–ó–∞–≥—Ä—É–∂–µ–Ω–Ω–æ–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ"
                  style={{
                    maxWidth: "100%",
                    maxHeight: "300px", // –û–≥—Ä–∞–Ω–∏—á–∏–≤–∞–µ–º —Ä–∞–∑–º–µ—Ä
                    objectFit: "contain", // –ü–æ–¥–≥–æ–Ω—è–µ–º –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –ø–æ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä—É
                    borderRadius: "10px",
                    boxShadow: "0 4px 8px rgba(0,0,0,0.2)"
                  }}
                />
              </div>
            )}
          </div>
        ))}

        <div className="chat-input">
          {/* –ö–Ω–æ–ø–∫–∞ –¥–ª—è –∑–∞–≥—Ä—É–∑–∫–∏ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è */}
          <button
            className="attach-button"
            onClick={() => document.getElementById("file-input")?.click()}
          >
            üìé
          </button>

          {/* –°–∫—Ä—ã—Ç—ã–π input –¥–ª—è –∑–∞–≥—Ä—É–∑–∫–∏ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π */}
          <input
            type="file"
            accept="image/jpeg, image/png"
            style={{ display: "none" }}
            id="file-input"
            onChange={handleImageUpload}
          />

          <input
            type="text"
            className="message-input"
            placeholder="–ù–∞–ø–∏—Å–∞—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ..."
            value={inputValue}
            onChange={(e) => setInputValue(e.target.value)}
            onKeyPress={handleKeyPress} // –û–±—Ä–∞–±–æ—Ç–∫–∞ –Ω–∞–∂–∞—Ç–∏—è –∫–ª–∞–≤–∏—à–∏ Enter
          />
          <button className="send-button" onClick={handleSendMessage}>
            ‚û§
          </button>
        </div>
      </div>
    </div>
  );
}
