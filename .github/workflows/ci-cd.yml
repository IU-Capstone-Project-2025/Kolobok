name: CI/CD

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

jobs:
  lint-python:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.10'

      - name: Install linters
        run: |
          python -m pip install --upgrade pip
          pip install ruff

      - name: Run Ruff (basic whitespace lint)
        run: ruff check --select W291,W292,W293 --output-format=github --extend-exclude "**/*.ipynb,ml/tests/**" ml/

  lint-js-css:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'

      - name: Install linting tools
        run: |
          npm install -g eslint stylelint

      - name: Run ESLint
        run: |
          eslint frontend/static/*.js || echo "No JS files to lint"

      - name: Run Stylelint
        run: |
          stylelint "frontend/static/*.css" || echo "No CSS files to lint"

  test-python:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'

      - name: Install dependencies
        run: |
          pip install pytest pytest-asyncio pytest-mock
          pip install python-telegram-bot requests pillow

      - name: Run tests
        run: |
          echo "No Python tests to run (placeholder)."

  build-images:
    runs-on: ubuntu-latest
    needs: [lint-python, lint-js-css, test-python]
    if: github.event_name == 'push' && (github.ref == 'refs/heads/main' || github.ref == 'refs/heads/master')
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build ML image
        uses: docker/build-push-action@v5
        with:
          context: ./ml
          push: false
          tags: kolobok-ml:latest
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Build Frontend image
        uses: docker/build-push-action@v5
        with:
          context: ./frontend
          push: false
          tags: kolobok-frontend:latest
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Build Telegram Bot image
        uses: docker/build-push-action@v5
        with:
          context: ./tg
          push: false
          tags: kolobok-tg:latest
          cache-from: type=gha
          cache-to: type=gha,mode=max

 